{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dasboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dasboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","profile","className","to","onClick","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","console","log","user","content","moment","time","toDate","fromNow","id","ProjectSummary","project","title","authorFirstname","authorLastname","createdAt","calendar","ProjectList","projects","proj","firestore","ordered","useFirestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","catch","err","useState","setEmail","setPassword","onSubmit","e","preventDefault","htmlFor","value","onChange","target","signUp","firstName","lastName","getFirestore","createUserWithEmailAndPassword","resp","doc","set","setFirstName","setLastName","dispath","createProject","authorId","add","Date","setTitle","setContent","history","useHistory","push","AuthIsLoaded","children","useSelector","isLoaded","App","exact","path","component","ProjectDetails","SignIn","SignUp","CreateProject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authReducer","action","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampInSnapshots","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","config","userProfile","useFirestoreForProfile","rrfProps","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b711773.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = ({ signOut, profile }) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <span onClick={signOut}>Log Out</span>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = ({ email, password, firstName, lastName }) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((resp) => {\n        // we need to reuse the same uid created by the firebase auth, so we use .doc() insteda of .add()\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: firstName,\n            lastName: lastName,\n            initials: firstName[0] + lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_FAILED\", err });\n      });\n  };\n};\n","import { NavLink } from \"react-router-dom\";\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Signup</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = ({ auth, profile }) => {\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          MarioPlan\n        </Link>\n        {links}\n        {/* {auth.isLoaded && links} */}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\nexport default connect(mapStateToProps)(Navbar);\n","import moment from \"moment\";\n\nconst Notifications = ({ notifications }) => {\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map((item) => {\n                console.log(item);\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user}</span>&nbsp;\n                    <span>{item.content}</span>\n                    <div className=\"note-date grey-text\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by the {project.authorFirstname} {project.authorLastname}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).calendar()}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map((project) => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\n// import { firestoreConnect } from \"react-redux-firebase\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Dashboard = ({ proj, auth, notifications }) => {\n  // useFirestoreConnect([\"projects\"]); // sync projects collection from Firestore into redux store\n  useFirestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\n  ]);\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  return (\n    <div className=\"dashboard container\">\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          <ProjectList projects={proj} />\n        </div>\n        <div className=\"col s12 m5 offset-m1\">\n          <Notifications notifications={notifications} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    proj: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n\n//use compose to chain  ultiple high order functions\n// export default compose(\n//   firestoreConnect(() => [\"projects\"]),\n//   connect(mapStateToProps)\n// )(Dashboard);\n","// import { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nconst ProjectDetails = ({ project, auth }) => {\n  useFirestoreConnect([\"projects\"]);\n  // const { id } = useParams();\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstname} {project.authorLastname}\n            </div>\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n};\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectDetails);\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nconst SignIn = ({ signIn, authError, auth }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signIn({ email, password });\n  };\n  if (auth.uid) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Sign-In</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink ligthen-1 z-depth-0\">LogIn</button>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\n// call the action creator\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nconst SignUp = ({ auth, signUp, authError }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signUp({ email, password, firstName, lastName });\n  };\n  if (auth.uid) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"lastName\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink ligthen-1 z-depth-0\">Sign Up</button>\n          <div className=\"red-text center\">\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (user) => dispatch(signUp(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CreateProject = ({ createProject, auth }) => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createProject({ title, content });\n    history.push(\"/\");\n  };\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n        <div className=\"input-field\">\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </div>\n        <div className=\"input-field\">\n          <label htmlFor=\"content\">Project Content</label>\n          <textarea\n            className=\"materialize-textarea\"\n            id=\"content\"\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          ></textarea>\n        </div>\n        <div className=\"input-field\">\n          <button className=\"btn pink ligthen-1 z-depth-0\">Create</button>\n        </div>\n      </form>\n    </div>\n  );\n};\nconst mapDispathToProps = (dispath) => {\n  return {\n    // dispatch an action creator(createProject) from projectAction.js\n    // proj is a param passed upon call\n    createProject: (proj) => dispath(createProject(proj)),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathToProps)(CreateProject);\n","export const createProject = (project) => {\n  // we are using thunk to return a function, and we get an extra argemnet  (withExtraArgument-- see index.js)\n  // destructure the 3rd param\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const { firstName, lastName } = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    // .add() represebts the document that will be added\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstname: firstName,\n        authorLastname: lastName,\n        authorId: authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        //make async call to db\n        dispatch({ type: \"CREATE_PROJECT\", project });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dasboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div>splash screen...</div>;\n  return children;\n}\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <AuthIsLoaded>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <Dashboard />\n            </Route>\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </AuthIsLoaded>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n//ownProps inside mapstateToPRops will only get its values if the route syntax is this:\n/* <Route path=\"/project/:id\" component={ProjectDetails} /> */\n// and NOT like this:\n/* <Route ath=\"/project/:id\" > \n   <ProjectDetails />\n   </Route>  */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n      return {\n        ...state,\n        authError: \"Login Failed\",\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null,\n      };\n    case \"SIGNUP_FAILED\":\n      console.log(\"signup failed\");\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","import authReducer from \"./authReducer\";\n// import projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\"; //sync our data from the firestore to our state\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  // project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAI2Q6QqXch96tPpbgYatBM7vagNMzhtlo\",\n  authDomain: \"mynoa-marioplan.firebaseapp.com\",\n  projectId: \"mynoa-marioplan\",\n  storageBucket: \"mynoa-marioplan.appspot.com\",\n  messagingSenderId: \"335831176726\",\n  appId: \"1:335831176726:web:512ccf2984c9633b990737\",\n  measurementId: \"G-TPFR94RNKJ\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampInSnapshots: true });\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  //multiple store enhancers inside compose\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst config = {\n  userProfile: \"users\", // where profiles are stored in database,\n  useFirestoreForProfile: true,\n  ...fbConfig,\n};\n\nconst rrfProps = {\n  firebase,\n  config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\nconsole.log(rrfProps);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}